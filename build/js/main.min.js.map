{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/js/main.js","source/js/modules/spin/spin.js","source/js/modules/validate/input-validate.js"],"names":[],"mappings":"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","file":"main.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// import {iosVhFix} from './utils/ios-vh-fix';\n// import {initModals} from './modules/modals/init-modals';\n// import {Form} from './modules/form-validate/form';\nimport {initValidate} from './modules/validate/input-validate';\nimport './modules/spin/spin';\n\n// ---------------------------------\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\n  // Utils\n  // ---------------------------------\n\n  // iosVhFix();\n\n  // Modules\n  // ---------------------------------\n\n  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'\n  // в load следует добавить скрипты, не участвующие в работе первого экрана\n  window.addEventListener('load', () => {\n    // initModals();\n    // const form = new Form();\n    // window.form = form;\n    // form.init();\n\n    initValidate();\n  });\n});\n\n// ---------------------------------\n\n// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.\n\n// привязывайте js не на классы, а на дата атрибуты (data-validate)\n\n// вместо модификаторов .block--active используем утилитарные классы\n// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)\n// .select.select--opened ❌ ---> [data-select].is-open ✅\n\n// выносим все в дата атрибуты\n// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.\n\n// для адаптивного JS используется matchMedia и addListener\n// const breakpoint = window.matchMedia(`(min-width:1024px)`);\n// const breakpointChecker = () => {\n//   if (breakpoint.matches) {\n//   } else {\n//   }\n// };\n// breakpoint.addListener(breakpointChecker);\n// breakpointChecker();\n\n// используйте .closest(el)\n","const wheelsInner = document.querySelectorAll('.wheel__inner');\n// const wheelsContent = document.querySelectorAll('.wheel__content');\n// const wheelsImg = document.querySelectorAll('.wheel__img');\n// const degIndent = 44;\n// const initDeg = -110;\n\n// const rotate = (indent) => {\n//   let deg = initDeg;\n//   wheelsInner.forEach((wheelInner) => {\n//     wheelInner.style.transform = `rotate(${deg}deg)`;\n//     deg += indent;\n//   });\n// };\n\n// const rotateReverse = (indent) => {\n//   let deg = -initDeg;\n//   wheelsImg.forEach((wheelImg) => {\n//     wheelImg.style.transform = `rotate(${deg}deg)`;\n//     deg += -indent;\n//   });\n// };\n\n// rotate(degIndent);\n// rotateReverse(degIndent);\n\nconst getTransformRotateStyle = (style) => {\n  const matrix = style.match(/^matrix\\((.+)\\)$/);\n\n  if (!matrix) {\n    return;\n  }\n\n  const matrixValues = matrix[1].split(',').map(parseFloat);\n  const skewY = matrixValues[1];\n  const scaleY = matrixValues[3];\n\n  let angleInRadians = Math.atan2(skewY, scaleY);\n  const angleInDegrees = (angleInRadians * 180) / Math.PI;\n\n  // eslint-disable-next-line consistent-return\n  return Math.round(angleInDegrees);\n};\n\nconst rotateImg = () => {\n  wheelsInner.forEach((wheelInner) => {\n    const transformStyle = getComputedStyle(wheelInner).getPropertyValue('transform');\n    const deg = getTransformRotateStyle(transformStyle);\n    wheelInner.querySelector('.wheel__img').style.transform = `rotate(${-deg}deg)`;\n  });\n};\n\nrotateImg();\n","const form = document.querySelector('[data-form]');\nconst input = document.querySelector('[data-input]');\nlet isValid = false;\n\nconst initValidate = () => {\n  if (!form) {\n    return;\n  }\n\n  form.addEventListener('submit', (event) => {\n    if (!isValid) {\n      event.preventDefault();\n\n      form.classList.add('is-fail');\n      setTimeout(() => {\n        form.classList.remove('is-fail');\n      }, 300);\n    }\n  });\n\n  form.addEventListener('input', () => {\n    const invalidChars = /[@#$%^&*()!]/g;\n    input.value = input.value.replace(invalidChars, '');\n\n    if (input.value.length < input.minLength) {\n      isValid = false;\n    } else {\n      isValid = true;\n    }\n  });\n};\n\nexport {initValidate};\n"]}