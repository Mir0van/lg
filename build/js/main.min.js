(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _inputValidate = require("./modules/validate/input-validate");
require("./modules/spin/spin");
// import {iosVhFix} from './utils/ios-vh-fix';
// import {initModals} from './modules/modals/init-modals';
// import {Form} from './modules/form-validate/form';

// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------

  // iosVhFix();

  // Modules
  // ---------------------------------

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    // initModals();
    // const form = new Form();
    // window.form = form;
    // form.init();

    (0, _inputValidate.initValidate)();
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используется matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

},{"./modules/spin/spin":2,"./modules/validate/input-validate":3}],2:[function(require,module,exports){
"use strict";

var wheelsInner = document.querySelectorAll('.wheel__inner');
// const wheelsContent = document.querySelectorAll('.wheel__content');
// const wheelsImg = document.querySelectorAll('.wheel__img');
// const degIndent = 44;
// const initDeg = -110;

// const rotate = (indent) => {
//   let deg = initDeg;
//   wheelsInner.forEach((wheelInner) => {
//     wheelInner.style.transform = `rotate(${deg}deg)`;
//     deg += indent;
//   });
// };

// const rotateReverse = (indent) => {
//   let deg = -initDeg;
//   wheelsImg.forEach((wheelImg) => {
//     wheelImg.style.transform = `rotate(${deg}deg)`;
//     deg += -indent;
//   });
// };

// rotate(degIndent);
// rotateReverse(degIndent);

var getTransformRotateStyle = function getTransformRotateStyle(style) {
  var matrix = style.match(/^matrix\((.+)\)$/);
  if (!matrix) {
    return;
  }
  var matrixValues = matrix[1].split(',').map(parseFloat);
  var skewY = matrixValues[1];
  var scaleY = matrixValues[3];
  var angleInRadians = Math.atan2(skewY, scaleY);
  var angleInDegrees = angleInRadians * 180 / Math.PI;

  // eslint-disable-next-line consistent-return
  return Math.round(angleInDegrees);
};
var rotateImg = function rotateImg() {
  wheelsInner.forEach(function (wheelInner) {
    var transformStyle = getComputedStyle(wheelInner).getPropertyValue('transform');
    var deg = getTransformRotateStyle(transformStyle);
    wheelInner.querySelector('.wheel__img').style.transform = "rotate(".concat(-deg, "deg)");
  });
};
rotateImg();

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initValidate = void 0;
var form = document.querySelector('[data-form]');
var input = document.querySelector('[data-input]');
var isValid = false;
var initValidate = exports.initValidate = function initValidate() {
  if (!form) {
    return;
  }
  form.addEventListener('submit', function (event) {
    if (!isValid) {
      event.preventDefault();
      form.classList.add('is-fail');
      setTimeout(function () {
        form.classList.remove('is-fail');
      }, 300);
    }
  });
  form.addEventListener('input', function () {
    var invalidChars = /[@#$%^&*()!]/g;
    input.value = input.value.replace(invalidChars, '');
    if (input.value.length < input.minLength) {
      isValid = false;
    } else {
      isValid = true;
    }
  });
};

},{}]},{},[1])


//# sourceMappingURL=main.min.js.map
